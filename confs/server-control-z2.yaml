  binary_sensor:
  - platform: ecodan
    status_server_control_prohibit_heating_z2:
      id: status_server_control_prohibit_heating_z2
      internal: true
      trigger_on_initial_state: true
      on_state:
        if:
          condition:
            and:
              - switch.is_on: heatpump_switch_server_control_mode
              - binary_sensor.is_off: status_server_control_prohibit_heating_z2
              - switch.is_on: heatpump_switch_server_control_prohibit_z2_heating
          then:
            - switch.template.publish:
                id: heatpump_switch_server_control_prohibit_z2_heating
                state: OFF
          else:
            if:
              condition:
                and:
                  - switch.is_on: heatpump_switch_server_control_mode
                  - binary_sensor.is_on: status_server_control_prohibit_heating_z2
                  - switch.is_off: heatpump_switch_server_control_prohibit_z2_heating
              then:
                - switch.template.publish:
                    id: heatpump_switch_server_control_prohibit_z2_heating
                    state: ON
    status_server_control_prohibit_cool_z2:
      id: status_server_control_prohibit_cool_z2
      internal: true
      trigger_on_initial_state: true
      on_state:
        if:
          condition:
            and:
              - switch.is_on: heatpump_switch_server_control_mode
              - binary_sensor.is_off: status_server_control_prohibit_cool_z2
              - switch.is_on: heatpump_switch_server_control_prohibit_z2_cooling
          then:
            - switch.template.publish:
                id: heatpump_switch_server_control_prohibit_z2_cooling
                state: OFF
          else:
            if:
              condition:
                and:
                  - switch.is_on: heatpump_switch_server_control_mode
                  - binary_sensor.is_on: status_server_control_prohibit_cool_z2
                  - switch.is_off: heatpump_switch_server_control_prohibit_z2_cooling
              then:
                - switch.template.publish:
                    id: heatpump_switch_server_control_prohibit_z2_cooling
                    state: ON
  
  switch:
  - platform: template
    name: server control - zone 2 prohibit heating
    id: heatpump_switch_server_control_prohibit_z2_heating
    restore_mode: DISABLED
    optimistic: true
    lambda: |-
      if (id(heatpump_switch_server_control_mode).state) {
        return id(heatpump_switch_server_control_prohibit_z2_heating).state;
      } else {
        return false;
      }
    turn_on_action:
      - lambda: |-
          if (id(heatpump_switch_server_control_mode).state) 
            id(ecodan_instance).set_controller_mode(esphome::ecodan::CONTROLLER_FLAG::PROHIBIT_Z2_HEATING, true);
    turn_off_action:
      - lambda: |-
          if (id(heatpump_switch_server_control_mode).state) 
            id(ecodan_instance).set_controller_mode(esphome::ecodan::CONTROLLER_FLAG::PROHIBIT_Z2_HEATING, false);


  - platform: template
    name: server control - zone 2 prohibit cooling
    id: heatpump_switch_server_control_prohibit_z2_cooling
    restore_mode: DISABLED
    optimistic: true
    lambda: |-
      if (id(heatpump_switch_server_control_mode).state) {
        return id(heatpump_switch_server_control_prohibit_z2_cooling).state;
      } else {
        return false;
      }
    turn_on_action:
      - lambda: |-
          if (id(heatpump_switch_server_control_mode).state) 
            id(ecodan_instance).set_controller_mode(esphome::ecodan::CONTROLLER_FLAG::PROHIBIT_Z2_COOLING, true);
    turn_off_action:
      - lambda: |-
          if (id(heatpump_switch_server_control_mode).state) 
            id(ecodan_instance).set_controller_mode(esphome::ecodan::CONTROLLER_FLAG::PROHIBIT_Z2_COOLING, false);