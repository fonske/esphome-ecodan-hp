sensor:
# if you have a kWh meter
  - name: "realtime_heatpump_cop"
    unique_id: "realtime_heatpump_cop"
    unit_of_measurement: ""
    state: >
      {% set pout = states('sensor.ecodan_heatpump_estimated_output_power') | float(0) %}
      {% set pin = states('sensor.kwh_meter_3_phase_active_power') | float(0) %}
      {% set freq = states('sensor.ecodan_heatpump_compressor_frequency') | float(0) %}
      {% set prev_cop = states('sensor.heatpump_cop') | float(0) %}
      {% if freq == 0 or pin < 100 or pout == 0 %}
        0
      {% else %}
        {% set cop = (1000 * pout) / pin %}
        {{ prev_cop if (cop > 10 or cop < 0) else cop | round(2) }}
      {% endif %}
# compute condensation temp  example
  - name: "thermostat_condensation_room"
    unique_id: "thermostat_condensation_room"
    unit_of_measurement: "°C"
    state: >-
      {% set t = state_attr('climate.room' , 'current_temperature')| default(0) | float %}
      {% set rh = state_attr('climate.room' , 'current_humidity') | default(0) | float %}
      {% set a = log(rh / 100) + (17.62 * t / (243.12 + t)) | default(0) | float %}
      {{ (243.12 * a / (17.62 - a)) | float | round(1) }}

# monthly cop & total increasing counters (still have issues with restarting)
  - name: Heatpump total heating consumed
    unique_id: heatpump_total_heating_consumed
    unit_of_measurement: "kWh"
    device_class: energy
    state: "{{ states('sensor.ecodan_heatpump_heating_consumed')|float }}"
    availability: "{{ states('sensor.ecodan_heatpump_heating_consumed') not in ['unknown', 'unavailable', 'none'] }}"
  - name: Heatpump total heating produced
    unique_id: heatpump_total_heating_produced
    unit_of_measurement: "kWh"
    device_class: energy
    state: "{{ states('sensor.ecodan_heatpump_heating_delivered')|float }}"
    availability: "{{ states('sensor.ecodan_heatpump_heating_delivered') not in ['unknown', 'unavailable', 'none'] }}"

  - name: Heatpump total cool consumed
    unique_id: heatpump_total_cool_consumed
    unit_of_measurement: "kWh"
    device_class: energy
    state: "{{ states('sensor.ecodan_heatpump_cool_consumed')|float }}"
    availability: "{{ states('sensor.ecodan_heatpump_cool_consumed') not in ['unknown', 'unavailable', 'none'] }}"
  - name: Heatpump total cool produced
    unique_id: heatpump_total_cool_produced
    unit_of_measurement: "kWh"
    device_class: energy
    state: "{{ states('sensor.ecodan_heatpump_cool_delivered')|float }}"
    availability: "{{ states('sensor.ecodan_heatpump_cool_delivered') not in ['unknown', 'unavailable', 'none'] }}"

  - name: Heatpump total dhw consumed
    unique_id: heatpump_total_dhw_consumed
    unit_of_measurement: "kWh"
    device_class: energy
    state: "{{ states('sensor.ecodan_heatpump_dhw_consumed')|float }}"
    availability: "{{ states('sensor.ecodan_heatpump_dhw_consumed') not in ['unknown', 'unavailable', 'none'] }}"
  - name: Heatpump total dhw produced
    unique_id: heatpump_total_dhw_produced
    unit_of_measurement: "kWh"
    device_class: energy
    state: "{{ states('sensor.ecodan_heatpump_dhw_delivered')|float }}"
    availability: "{{ states('sensor.ecodan_heatpump_dhw_delivered') not in ['unknown', 'unavailable', 'none'] }}"

  - unique_id: heatpump_monthly_heating_cop
    unit_of_measurement: ""
    state: >-
      {% set consumed = states('sensor.monthly_heating_consumed') | default(0) | float %}
      {% set produced = states('sensor.monthly_heating_produced') | default(0) | float %}
      {{ 0 if (consumed == 0 or produced == 0) else (produced / consumed) | float | round(2) }}
  - unique_id: heatpump_monthly_cool_cop
    unit_of_measurement: ""
    state: >-
      {% set consumed = states('sensor.monthly_cool_consumed') | default(0) | float %}
      {% set produced = states('sensor.monthly_cool_produced') | default(0) | float %}
      {{ 0 if (consumed == 0 or produced == 0) else (produced / consumed) | float | round(2) }}
  - unique_id: heatpump_monthly_dhw_cop
    unit_of_measurement: ""
    state: >-
      {% set consumed = states('sensor.monthly_dhw_consumed') | default(0) | float %}
      {% set produced = states('sensor.monthly_dhw_produced') | default(0) | float %}
      {{ 0 if (consumed == 0 or produced == 0) else (produced / consumed) | float | round(2) }}

  - name: "Adaptive Setpoint Bias Today"
    unique_id: adaptive_setpoint_bias_today
    device_class: temperature
    unit_of_measurement: "°C"
    state: >
      {% set extreme_cold_temp = 7 %}
      {% set extreme_sun_chance = 80 %}
      {% set max_temp_sensor = 'sensor.buienradar_temperature_1d' %}
      {% set sun_chance_sensor = 'sensor.buienradar_sunchance_1d' %}
      {% if states(max_temp_sensor) not in ['unavailable', 'unknown'] and states(sun_chance_sensor) not in ['unavailable', 'unknown'] %}
        {% set max_temp = states(max_temp_sensor) | float(15) %}
        {% set sun_chance = states(sun_chance_sensor) | float(0) %}
        {% if max_temp < extreme_cold_temp or sun_chance > extreme_sun_chance %}
          {% set temp_factor = (15 - max_temp) * 0.1 %}
          {% set sun_factor = (sun_chance / 100) * -1.5 %}
          {% set result = temp_factor + sun_factor %}
          {{ min(max(result, -2.5), 2.5) | round(1) }}
        {% else %}
          0
        {% endif %}
      {% else %}
        0
      {% endif %}
